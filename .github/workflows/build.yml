# # name: Python CI/CD Pipeline
# # on: [push]
# # jobs:
#   # python-formatting:
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - name: Checkout
#   #       uses: actions/checkout@v4
#   #     - name: Setup Python
#   #       uses: actions/setup-python@v4
#   #       with:
#   #         python-version: 3.12
#   #     - name: Install flake8
#   #       run: pip install flake8
#   #     - name: Run flake8
#   #       run: flake8 .




# # on: 
# #   push:
# #     branches: 
# #       - main
# #   pull_request:
# #     branches:
# #       - main

# # env:
# #   PYTHON_VERSION: "3.12"
# #   REQUIREMENTS_FILE: "requirements.txt"

# # jobs:
# # #   unit-tests:
# # #     name: Run Unit Tests
# # #     runs-on: ubuntu-latest
# # #     steps:
# # #       - name: Checkout Code
# # #         uses: actions/checkout@v4

# # #       - name: Set up Python
# # #         uses: actions/setup-python@v4
# # #         with:
# # #           python-version: ${{ env.PYTHON_VERSION }}

# # #       - name: Cache Python Dependencies
# # #         uses: actions/cache@v3
# # #         with:
# # #           path: ~/.cache/pip
# # #           key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
# # #           restore-keys: |
# # #             ${{ runner.os }}-pip-

# # #       - name: Install Dependencies
# # #         run: |
# # #           python -m pip install --upgrade pip
# # #           pip install -r ${{ env.REQUIREMENTS_FILE }}

# # #       - name: Lint Code
# # #         run: |
# # #           pip install flake8
# # #           flake8 .

# # #       - name: Run Unit Tests
# # #         run: |
# # #           pytest --junitxml=unit-results.xml --cov=. --cov-report=xml:unit-coverage.xml

# # #       - name: Upload Unit Test Results
# # #         uses: actions/upload-artifact@v3
# # #         with:
# # #           name: unit-test-results
# # #           path: unit-results.xml

# # #       - name: Upload Unit Test Coverage Results
# # #         uses: actions/upload-artifact@v3
# # #         with:
# # #           name: unit-coverage-report
# # #           path: unit-coverage.xml

# # #   integration-tests:
# # #     name: Run Integration Tests
# # #     runs-on: ubuntu-latest
# # #     steps:
# # #       - name: Checkout Code
# # #         uses: actions/checkout@v4

# # #       - name: Set up Python
# # #         uses: actions/setup-python@v4
# # #         with:
# # #           python-version: ${{ env.PYTHON_VERSION }}

# # #       - name: Cache Python Dependencies
# # #         uses: actions/cache@v3
# # #         with:
# # #           path: ~/.cache/pip
# # #           key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
# # #           restore-keys: |
# # #             ${{ runner.os }}-pip-

# # #       - name: Install Dependencies
# # #         run: |
# # #           python -m pip install --upgrade pip
# # #           pip install -r ${{ env.REQUIREMENTS_FILE }}

# # #       - name: Run Integration Tests
# # #         run: |
# # #           pytest tests/integration --junitxml=integration-results.xml --cov=. --cov-report=xml:integration-coverage.xml

# # #       - name: Upload Integration Test Results
# # #         uses: actions/upload-artifact@v3
# # #         with:
# # #           name: integration-test-results
# # #           path: integration-results.xml

# # #       - name: Upload Integration Test Coverage Results
# # #         uses: actions/upload-artifact@v3
# # #         with:
# # #           name: integration-coverage-report
# # #           path: integration-coverage.xml

# # #   system-tests:
# # #     name: Run System Tests
# # #     runs-on: ubuntu-latest
# # #     steps:
# # #       - name: Checkout Code
# # #         uses: actions/checkout@v4

# # #       - name: Set up Python
# # #         uses: actions/setup-python@v4
# # #         with:
# # #           python-version: ${{ env.PYTHON_VERSION }}

# # #       - name: Cache Python Dependencies
# # #         uses: actions/cache@v3
# # #         with:
# # #           path: ~/.cache/pip
# # #           key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
# # #           restore-keys: |
# # #             ${{ runner.os }}-pip-

# # #       - name: Install Dependencies
# # #         run: |
# # #           python -m pip install --upgrade pip
# # #           pip install -r ${{ env.REQUIREMENTS_FILE }}

# # #       - name: Run System Tests
# # #         run: |
# # #           pytest tests/system --junitxml=system-results.xml --cov=. --cov-report=xml:system-coverage.xml

# # #       - name: Upload System Test Results
# # #         uses: actions/upload-artifact@v3
# # #         with:
# # #           name: system-test-results
# # #           path: system-results.xml

# # #       - name: Upload System Test Coverage Results
# # #         uses: actions/upload-artifact@v3
# # #         with:
# # #           name: system-coverage-report
# # #           path: system-coverage.xml

#   deploy:
#     name: Deploy to Production
#     #needs: [unit-tests, integration-tests, system-tests]
#     if: success() && github.ref == 'refs/heads/main'
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: ${{ env.PYTHON_VERSION }}

#       - name: Install Dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r ${{ env.REQUIREMENTS_FILE }}
        
#       - name: Deploy to ImPaaS
#         uses: /impaas/impaas-deploy@v3
#         with:
#           app-name: sse-groupwork1
#           deployment-token: ${{ secrets.IMPAAS_DEPLOY_TOKEN }}
#           method: PLATFORM

name: Python CI

on: [push]

jobs:
  deploy-to-impaas:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: ImPaaS-Deploy
      uses: /impaas/impaas-deploy@v3
      with:
        app-name: sse-groupwork1
        deployment-token: ${{ secrets.IMPAAS_DEPLOY_TOKEN }}
        method: PLATFORM